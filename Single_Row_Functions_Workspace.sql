-- # Lab Exercises - Single Row Functions

-- To perform the following assigments, refer to the tables in the JustLee
-- Books database.

-- 1. Produce a list of all customer names in which the first letter of the first and last names is in uppercase and the rest are in lowercase.
SELECT 
  INITCAP(LastName) || ' ' || INITCAP(FirstName) AS CustomerName
FROM 
  Customers;

-- 2. Create a list of all customer numbers along with text indicating whether the customer has been referred by another customer. Display the text “NOT REFERRED” if the customer wasn’t referred to JustLee Books by another customer or “REFERRED” if the customer was referred.
SELECT 
  Customer#,
  CASE 
    WHEN Referred IS NULL THEN 'NOT REFERRED'
    ELSE 'REFERRED'
  END AS ReferralStatus
FROM 
  Customers;

-- 3. Determine the amount of total profit generated by the book purchased on order 1002. Display the book title and profit. The profit should be formatted to display a dollar sign and two decimal places. Take into account that the customer might not pay the full retail price, and each item ordered can involve multiple copies.
SELECT
  B.Title,
  TO_CHAR(SUM(OI.Quantity * (B.Retail - B.Cost)), '$9,999.00') AS Profit
FROM
  Orders O
JOIN
  OrderItems OI ON O.Order# = OI.Order#
JOIN
  Books B ON OI.ISBN = B.ISBN
WHERE
  O.Order# = 1002
GROUP BY
  B.Title;

-- 4. Display a list of all book titles and the percentage of markup for each book. The percentage of markup should be displayed as a whole number (that is, multiplied by 100) with no decimal position, followed by a percent sign (for example, .2793 = 28%). (The percentage of markup should reflect the difference between the retail and cost amounts as a percent of the cost.).
SELECT
  Title,
  TO_CHAR(((Retail - Cost) / Cost) * 100, '999') || '%' AS MarkupPercentage
FROM
  Books;

-- 5. Display the current day of the week, hour, minutes, and seconds of the current date setting on the computer you’re using.
SELECT
  TO_CHAR(SYSDATE, 'Day') AS DayOfWeek,
  TO_CHAR(SYSDATE, 'HH24') AS Hour,
  TO_CHAR(SYSDATE, 'MI') AS Minutes,
  TO_CHAR(SYSDATE, 'SS') AS Seconds
FROM
    dual;

-- 6. Create a list of all book titles and costs. Precede each book’s cost with asterisks so that the width of the displayed Cost field is 12.
SELECT
  Title,
  RPAD('*', 12 - LENGTH(TO_CHAR(Cost)), '*') || TO_CHAR(Cost, '999.99') AS FormattedCost
FROM
  Books;

-- 7. Determine the length of data stored in the ISBN field of the BOOKS table. Make sure each different length value is displayed only once (not once for each book).
SELECT DISTINCT LENGTH(ISBN) AS ISBN_Length
FROM BOOKS;

-- 8. Using today’s date, determine the age (in months) of each book that JustLee sells. Make sure only whole months are displayed; ignore any portions of months. Display the book title, publication date, current date, and age.
SELECT
  Title,
  PubDate AS PublicationDate,
  SYSDATE AS CurrentDate,
  FLOOR(MONTHS_BETWEEN(SYSDATE, PubDate)) AS AgeInMonths
FROM
  Books;

-- 9. Determine the calendar date of the next occurrence of Wednesday, based on today’s date.
SELECT
  SYSDATE AS CurrentDate,
  NEXT_DAY(SYSDATE, 'WEDNESDAY') AS NextWednesday
FROM
  dual;

-- 10 .Produce a list of each customer number and the third and fourth digits of his or her zip code. The query should also display the position of the first occurrence of a 3 in the customer number, if it exists.
SELECT
  Customer#,
  SUBSTR(Zip, 3, 2) AS ThirdAndFourthDigitsOfZip,
  CASE
    WHEN INSTR(TO_CHAR(Customer#), '3') > 0 THEN INSTR(TO_CHAR(Customer#), '3')
    ELSE NULL
  END AS PositionOfFirst3
FROM
  Customers;
